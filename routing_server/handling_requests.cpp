/* обработка запросов get, post со следующими параметрами:

GET запросы:
/process - обработка снимка
Параметры: snapshot_id, spectrum
Ищем у себя в базе данных, собираем часто используемые тайлы указанных спектров, отпрввляем по одному спектру на клиент, тайлы, которые помечены как редко используемые, заливаем цветом, указанным в базе данных (при добавлении в бд берем средний цвет тайла и пишем его в бд) 
/search - поиск снимков по координатам (нужно возвращать только название на данном этапе, так что ищем только у себя в бд , снимки≤ координаты которых пересекаются с указанными в запросе)
Параметры: north, south, east, west

POST запросы:
/upload - загрузка файлов
Формат: multipart/form-data
Поля:
snapshot_id - ID снимка
spectrum - тип спектра
file_name - имя файла
file - сам файл
С post-запросами поступаем так: передаем файл обученной модели(ее позже добавлю, пока сделай обертку), она определяет актуальные области , получается двоичный слой для каждого пикселя, нарезаем на тайлы( server/tiles.cpp как тут), тайлы, где наиболее количество выделенных маской областей≤ считаем горячими, остальные тайлы считаем холодными, соответственно создаются запросы к серверу  

Подсчет частоты обращений к конкретным спектрам и тайлам 

В клиенте надо добавить кнопку "хочу более подробный, снимок, загрузите полностью" , или нажатие на конкретный тайл

Нужно собирать статистику обращения к конкретным спектрам и областям снимка, чтобы корректировать распределение в будущем
Перераспределение хранения при удалении/добавлении нового сервера хранения - пока обертку для функции сделай, реализацию позже добавлю

*/
